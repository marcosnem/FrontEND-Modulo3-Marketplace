Roteamento (react router)

Aula 01 - Introducao ao React Router DOM

Biblioteca externa que serve para roteamento de paginas.

Gerenciamento e navegacao entre as paginas

Permite aplicacao com varias se carregar as paginas


site do react router
https://reactrouter.com/en/main

Instalando apos a criacao do 

npm install react-router-dom@6.4.2

Aula 02 - Criacao de rotas

No index do src (principal)
Importado 3 elementos do react-router
import { BrowserRouter, Routes, Route } from "react-router-dom";

Criada a estrutura para rotear as paginas

 <BrowserRouter>
    <Routes>
      <Route path="/" element={<Home/>}/>
      <Route path="/login" element={<Login/>}/>
    </Routes>
    </BrowserRouter>

    Foram importadas as duas paginas (home e login)
    
     
Aula 03 - links

Criado os links. da home para login e vice versa

Precisa importar o Link do react
import { Link } from 'react-router-dom'

Usar a taga conforme modelo: <Link to='local/'</Link>

Aula 04 - Menu e links

Voltar a usar o componente App

Recortadas as rotas

Criacao de uma nav bar

Aula 05 - Parametros de URL

Criado componente products

uso do useParams para acessar os parametros da rotas, na App.js

Aula 06 - Query String e Pagina 404

Ordernar, buscar, paginar, identificacao de paginas

Acessar o valor da Query

Usar o hook userSearchParams o index do Products

Criacao da pagina 404

Aula 07 Navigate e Rotas Aninhadas

Uso do navigate no index do Register

Criacao de rota Aninhada para o review do produto dentro de App.js

Outlet para pegar o review do products e colocar na pagina. Chama rotas aninhadas.

Criado um link para os reviews dentro pages/Products/index
<Link to="/product/1/reviews">Link para as reviews</Link><br/>

Aula 08 - State entre rotas

Enviar state pelo Register

no index do register 
navigate('/products', {state: 3453453453})

No index do Products o useLocation captura o estado 
const { state } = useLocation();

Enviar o estado no produto pelo link

Introducao ao Taiwindcss

Aula 01 - Estilizaçao no React

CCS Inline
Feito dentro do index do NavMenu

CSS Modules (pouco utilizado)
Arquivo style.module.css na pasta NavMenu
Ele cria um escopo local do componente

Styled components
Uma Biblioteca que permite o uso estilos como componentes

instalar 
npm install --save styled-components@latest
https://styled-components.com/

https://stackoverflow.com/questions/70810819/npm-err-cannot-read-properties-of-null-reading-edgesout

Tailwindcss
Conjunto de classes utilitarias (framework) CSS
https://tailwindcss.com/

push só compila o que for usar

Aula 02 - Introducao do Tailwindcss

Criado um novo projeto

npx create-react-app market-place-reactjs

Usar o fragment, tag funcionando como generica ( <> </>)

Instalar o router dom
https://reactrouter.com/en/main
npm install react-router-dom@6.4.2

Instalar o Tailwindcss
https://tailwindcss.com/
npm install -D tailwindcss postcss autoprefixer

configura o tailwindcss
npx tailwindcss init -p

gerar os arquivos postcss.config e o tailwindcss.config

configura os templates
colar dentro de content do arquivo tailwind.config.js
"./src/**/*.{js,jsx,ts,tsx}",

importar as diretivas do tailwindcss para o css do index principal
colar no index.css principal 
@tailwind base;
@tailwind components;
@tailwind utilities;

rodar o App
npm start

teste da class abaixo na h1 do ola
<h1 className="text-3xl font-bold underline text-red-800">

Projeto Marketplace

Aula 01 - Projeto Marketplace header

Entendendo o uso do BrowserRouter no index.js 

Importar o BrowserRouter
import {BrowserRouter} from 'react-router-dom'

montar estrutura
<BrowserRouter></BrowserRouter>

Erro no clone do notebook casa
'react-scripts' não é reconhecido como um comando interno
comando que usei
npm install react-scripts --save
https://stackoverflow.com/questions/47928735/react-scripts-is-not-recognized-as-an-internal-or-external-command

Extensao para montar paginas do react
ES7+ React/Redux/R

Para criar um component usa-se:
rafce (react arrow function component export) e pressiona tab

Instalar a extensao tailwindcss

Criacao do NavBar em components

importacao da img na NavBar
https://undraw.co/

Pegar cores
https://flatuicolors.com/


Aula 02 - Home - parte 1

Google fonts
Roboto
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700;900&display=swap');


MontSerrat
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;400;500;700&family=Roboto:wght@300;400;500;700;900&display=swap');

Funcoes de diretivas do Tailwindcss

Usando Layer
Fazendo o importacao da funcoes do tailwind pra classe menu-tab
no arquivo index.css

useState para mudar a categoria selecionada
no arquivo ProductList

Uso de grid para gerar a tela de produtos

Aula 03 - Home - parte 3

Reactr Hooks

Aula 01 - So explanacao

Aula 02 - Use state

Criacao do arquivo mokado

pasta mock e arquivo product.js

o arquivo productMock tem um array com product

Aula 03 -  Criacao de Form e Autenticacao

Form de login

 <main className='h-screen w-full banner'>
    <div className='flex flex-col items-center pt-20 h-screen'>
        <img className='w-52' src={logo} alt='logotipo food app'/>
        <form action='' className='b-white w-96 mt-6 p-4 rounded-lg shadow-lg'>
           <div className='flex flex-col space-y-6'>
            <input type="mail" placeholder="Digite seu email" name="email" className="w-full px-4 py3 rounded-lg ring-red-200 border border-gray-300 focus:outline-none transition duration-300"/>
            <input type="password" placeholder="Digite sua senha" name="senha" className="w-full px-4 py3 rounded-lg ring-red-200 border border-gray-300 focus:outline-none transition duration-300"/>
            </div> 
            <button className="w-full py-3 bg-primary text-white focus:outline-none focus:ring-4 mt-6 rounded-lg transition duration-300">Entrar</button>
            <p className="text-base text-primary text-center my-6 hover:underline cursor-pointer">Precisa de uma conta?</p>
        </form>
    </div>
   </main>

   Aula 04 - Manipulacao de formularios

   Comportamento - form controlados

   Montar a funcao para ver o estato no form

   handleChangeValues para captura o teclado
   onChange no fim do input

   Criar variavel de estado para salvar



Aula 05 - Use Context

Instancia de contexto criada na pasta contexto

O contexto torna a variavel compartilhada para todos que estiverem dentro de sua tag (AuthProvider) vai ter acesso ao values

Aula 06  - Fetch post login

uso do navigate para acionar o onClick no botao login dentro do NavBar

Fetch API faz requisicoes (tem dois parametros: RequestInfo/URL - e RequestInit - configs)

no arquivo index do login linha 23 construido o Fetch

erro de Requisição cross-origin bloqueada: A diretiva Same Origin (mesma origem) não permite a leitura do recurso remoto
https://medium.com/@dtkatz/3-ways-to-fix-the-cors-error-and-how-access-control-allow-origin-works-d97d55946d9

ajuste no index do back-end
app.use(cors(
    {
        // origin: [
        //     "localhost:3001",
        //     "localhost:3002"
        // ],
        header: ('Access-Control-Allow-Origin', '*'),
        methods: ["GET","POST","PUT", "PATCH","DELETE"]
    }
));

Aula 07  - Refatorando o Context

todo o response do fecth do index login foi para o AuthContext dentro do loginuser

Aula 08 - UseEffect
salvar o login do usuario para mante-lo logado (estado)

usando o localstorage

localStorage.setItem('userInfo', JSON.stringify(data))

Hook useEffect 
Executa um efeito quando algo é alterado

useEffect(() => {
  const userInfo = localStorage.getItem('userInfo');

  if(userInfo) {
    setUserLogged(true);
    alert('Usuario logado');
    }else {
      alert('Usuario nao logado');
    }

}, [])

Aula 09 - Menu, Navegacao e Pos Login

Alteracoes no index do NavBar

Entre as div do header

Usar icones no React
https://react-icons.github.io/react-icons/

Instalar o Biblioteca de icones
npm install react-icons --save

Ajusta no NavBar para remover Login e Register quando logar

Aula 10 - Rotas Privadas

Fazer o logout 
Limpar o cache para o logout 

No index do AuthContext
Criar a funcao logout

const logoutUser = () => {
  setUserLogged(false);
  localStorage.clear();
  navigate('/login')
}

Rota privada no App.js
ProectedRoute serve para proteger a home. 
Rota home

<Route path="/" element={
<ProtectedRoute>
   <Home />
</ProtectedRoute>
}/>

Aula 11 - Outros Hooks

Ver pdf

Aula 12 - Custom Hook
Criacao do hook para reduzir o codigo de AuthContext
pasta hook e arquivo useAuth.js com o conteudo do AuthContext

Parte removida do AuthContext e inserida no useAuth
// //variavel de estado para verifi logon user
// const [ userLogged, setUserLogged ] = useState(false); 

// //state para carregar a rota, enquanto ver o user ta logado 
// const [ loading, setLoading ] = useState(true);

// const navigate = useNavigate();

// //Quando o user tiver logado, o setUserLogged vai pra true
// useEffect(() => {
//   const userInfo = localStorage.getItem('userInfo');

//   if(userInfo) {
//     setUserLogged(true);
//     // alert('Usuario logado');
//     // }else {
//     //   alert('Usuario nao logado');
//     }

//     //se user logado, loading volta para false
//     setLoading(false);

// }, [])

// const loginUser = async (inputValues) => {
//   const response = await fetch('http://localhost:3000/auth/login', {
//     method: 'POST',
//     headers: {
//       'Content-Type': 'application/json'       
//     },
//     body: JSON.stringify(inputValues)
    
//   })
// //Ver o dado da resposta que ta no body(conteudo)
// const data = await response.json();
// console.log(data);

//   console.log(response);

//   // variavel pra armazenar o logon do usuario. Converte a resposta (OBJ) em JSON
//   localStorage.setItem('userInfo', JSON.stringify(data))
//   navigate('/')
//   setUserLogged(true);
// }

// // Funcao logout
// const logoutUser = () => {
//   setUserLogged(false);
//   localStorage.clear();
//   navigate('/login')
// }

Introdução ao Redux e Comunicação Cliente-Servidor 

Aula 01 - 

Uso do Axios para a comunicao (REQ e RES)


Redux [é uma biblioteca para armazenar os estados, action e tratar as actions

Aula 02 - Instalacao e configuracao do Axios

https://axios-http.com/ptbr/docs/intro

npm install axios

Subir uma instancia do Axios

Criar pasta services e o arquivo api.js 

Removido do useAuth a tarefa de fazer login

Criar o authService.js dentro da services

Remover do arquivo useAuth a parte do fetch
fetch('http://localhost:3000/auth/login', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'       
    },
    body: JSON.stringify(inputValues)
    
  })

Erro era o servico do mongo db nao iniciado

Aula 03 Cadastro Usuário

Construcao do Register

Uso URL da imagem no site 
https://www.flaticon.com/br/

  
Aula 04 - Rotas Autenticadas

Criacao do getUserById no services > authService.js

criacao do findById

alteracao do navbar para capturar o nome e imagem do usuario logado

adicionado o userFull no AuthContext para disponibilizar-lo em todas as rotas

Aula 05 - Tela de admin

Criacao da page admin

navbar com acesso ao admin

feito uma table com produtos ficticios

acao no botao adicionar produtos












 












   















